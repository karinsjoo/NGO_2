/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package sdgsweden;

import oru.inf.InfDB;
import oru.inf.InfException;
import java.util.ArrayList;
import java.util.HashMap;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
/**
 *
 * @author karin
 */
public class AnstalldHantera extends javax.swing.JFrame {
    
    private InfDB idb;
    private AnvandareBehorighet anvandareBehorighet;
    private HashMap<String, String> avdelningsNamnTillId = new HashMap<>();

    /**
     * Creates new form AnstalldHantera
     */
    public AnstalldHantera(InfDB idb, AnvandareBehorighet anvandareBehorighet) {
        initComponents();
        this.idb = idb;
        this.anvandareBehorighet = anvandareBehorighet;
        fyllAnstalldaLista();
        fyllAvdelningar();
    }
    
    private void fyllAnstalldaLista() {
        try {
            String sql = "SELECT fornamn, efternamn, epost FROM anstalld";
            ArrayList<HashMap<String, String>> resultat = idb.fetchRows(sql);

            DefaultListModel<String> modell = new DefaultListModel<>();

            for (HashMap<String, String> rad : resultat) {
                String fornamn = rad.get("fornamn");
                String efternamn = rad.get("efternamn");
                String epost = rad.get("epost");
                modell.addElement(fornamn + " " + efternamn + " - " + epost);
            }

            lstAnstallda.setModel(modell);

        } catch (InfException e) {
            JOptionPane.showMessageDialog(this, "Kunde inte hämta anställda: " + e.getMessage());
        }
    }
    
    private void fyllAvdelningar() {
 
    try {
        String sql = "SELECT avdid, namn FROM avdelning";
        ArrayList<HashMap<String, String>> resultat = idb.fetchRows(sql);

        cbAvdelning.removeAllItems();
        avdelningsNamnTillId.clear();

        for (HashMap<String, String> rad : resultat) {
            String avdid = rad.get("avdid");
            String namn = rad.get("namn");

            cbAvdelning.addItem(namn);
            avdelningsNamnTillId.put(namn, avdid);  // koppla namn till ID
        }
    } catch (InfException e) {
        JOptionPane.showMessageDialog(this, "Kunde inte hämta avdelningar: " + e.getMessage(), "Databasfel", JOptionPane.ERROR_MESSAGE);
    }
}


//Metod för att slumpa ett lösenord
    private String genereraLosenord() {
        String tecken = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789!@#$%";
        StringBuilder losenord = new StringBuilder();
        int langd = 10;

        for (int i = 0; i < langd; i++) {
            int index = (int) (Math.random() * tecken.length());
            losenord.append(tecken.charAt(index));
        }

        return losenord.toString();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblFornamn = new javax.swing.JLabel();
        lblEfternamn = new javax.swing.JLabel();
        txtFornamn = new javax.swing.JTextField();
        txtEfternamn = new javax.swing.JTextField();
        lblEpost = new javax.swing.JLabel();
        txtEpost = new javax.swing.JTextField();
        lblTelefon = new javax.swing.JLabel();
        txtTelefon = new javax.swing.JTextField();
        lblRoll = new javax.swing.JLabel();
        lblAvdelning = new javax.swing.JLabel();
        cbRoll = new javax.swing.JComboBox<>();
        lblRubrik = new javax.swing.JLabel();
        cbAvdelning = new javax.swing.JComboBox<>();
        btnLaggTill = new javax.swing.JButton();
        btnTaBort = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        lstAnstallda = new javax.swing.JList<>();
        btnStang = new javax.swing.JButton();
        lblAnstallda = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lblFornamn.setText("Förnamn");

        lblEfternamn.setText("Efternamn");

        lblEpost.setText("Epost");

        lblTelefon.setText("Telefon");

        lblRoll.setText("Roll");

        lblAvdelning.setText("Avdelning");

        cbRoll.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Handläggare", "Admin" }));

        lblRubrik.setText("Hantera anställda");

        btnLaggTill.setText("Lägg till anställd");
        btnLaggTill.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLaggTillActionPerformed(evt);
            }
        });

        btnTaBort.setText("Ta bort anställd");
        btnTaBort.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTaBortActionPerformed(evt);
            }
        });

        lstAnstallda.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane1.setViewportView(lstAnstallda);

        btnStang.setText("Stäng");
        btnStang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnStangActionPerformed(evt);
            }
        });

        lblAnstallda.setText("Anställda");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(170, 170, 170)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(cbRoll, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtEpost, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtFornamn, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(51, 51, 51)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblTelefon, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(lblEfternamn, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 3, Short.MAX_VALUE))
                                    .addComponent(lblAvdelning, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnLaggTill)
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 292, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtEfternamn, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtTelefon, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnStang)
                    .addComponent(cbAvdelning, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(9, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblRoll, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(lblEpost, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(lblFornamn, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(lblRubrik, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(86, 86, 86)
                        .addComponent(btnTaBort))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(lblAnstallda, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblRubrik)
                            .addComponent(btnLaggTill))
                        .addGap(23, 23, 23)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblFornamn)
                            .addComponent(txtFornamn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblEfternamn)
                            .addComponent(txtEfternamn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblEpost)
                            .addComponent(txtEpost, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblTelefon)
                            .addComponent(txtTelefon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(48, 48, 48)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblRoll)
                            .addComponent(lblAvdelning)
                            .addComponent(cbRoll, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cbAvdelning, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 29, Short.MAX_VALUE)
                        .addComponent(lblAnstallda)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnStang)
                        .addGap(1, 1, 1)))
                .addComponent(btnTaBort)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnTaBortActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTaBortActionPerformed
        
        String valdRad = lstAnstallda.getSelectedValue();

        if (valdRad == null) {
            JOptionPane.showMessageDialog(this, "Välj en anställd att ta bort.");
            return;
        }

        String epost = valdRad.split(" - ")[1];                                        
        try {
            // Ta reda på aid från e-post
            String aidSql = "SELECT aid FROM anstalld WHERE epost = '" + epost + "'";
            String aid = idb.fetchSingle(aidSql);

            // Ta bort från handlaggare och admin först (om de finns)
            idb.delete("DELETE FROM handlaggare WHERE aid = '" + aid + "'");
            idb.delete("DELETE FROM admin WHERE aid = '" + aid + "'");

            // Nu kan du ta bort från anstalld
            String sql = "DELETE FROM anstalld WHERE aid = '" + aid + "'";
            idb.delete(sql);

            JOptionPane.showMessageDialog(this, "Anställd borttagen.");
            fyllAnstalldaLista(); // Uppdatera listan
        } catch (InfException e) {
            JOptionPane.showMessageDialog(this, "Fel vid borttagning: " + e.getMessage());
        }



    }//GEN-LAST:event_btnTaBortActionPerformed

    private void btnLaggTillActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLaggTillActionPerformed
  
        String fornamn = JOptionPane.showInputDialog(this, "Förnamn:");
        String efternamn = JOptionPane.showInputDialog(this, "Efternamn:");
        String epost = JOptionPane.showInputDialog(this, "E-post:");
        String telefon = JOptionPane.showInputDialog(this, "Telefon:");
        String avdelningsnamn = (String) cbAvdelning.getSelectedItem();
        String avdelningId = avdelningsNamnTillId.get(avdelningsnamn);
        String roll = (String) cbRoll.getSelectedItem();

        if (fornamn == null || efternamn == null || epost == null || telefon == null) {
            return; // Användaren tryckte Avbryt
        }

        // Validering
        StringBuilder felmeddelanden = new StringBuilder();

        if (!Validering.arText(fornamn)) {
            felmeddelanden.append("Förnamn får endast innehålla bokstäver, siffror, mellanslag och bindestreck.\n");
        }

        if (!Validering.arText(efternamn)) {
            felmeddelanden.append("Efternamn får endast innehålla bokstäver, siffror, mellanslag och bindestreck.\n");
        }

        if (!Validering.arEpost(epost)) {
            felmeddelanden.append("E-postadressen är inte i korrekt format.\n");
        }

        if (!Validering.arText(telefon)) {
            felmeddelanden.append("Telefon får endast innehålla siffror och eventuellt bindestreck.\n");
        }

        if (felmeddelanden.length() > 0) {
            JOptionPane.showMessageDialog(this, felmeddelanden.toString(), "Fel i inmatning", JOptionPane.WARNING_MESSAGE);
            return;
        }

        try {
            // Generera nytt AID
            String maxAidSql = "SELECT MAX(aid) FROM anstalld";
            String maxAidStr = idb.fetchSingle(maxAidSql);
            int nyttAid = (maxAidStr != null) ? Integer.parseInt(maxAidStr) + 1 : 1000; // Om tom, börja på 1000

            // Generera lösenord
            String losenord = genereraLosenord();

            // Lägg till i tabell anstalld
            String sql = "INSERT INTO anstalld (aid, fornamn, efternamn, epost, telefon, losenord, avdelning) "
                    + "VALUES ('" + nyttAid + "', '" + fornamn + "', '" + efternamn + "', '" + epost + "', '" + telefon + "', '" + losenord + "', '" + avdelningId + "')";
            idb.insert(sql);

            // Lägg till i behörighetstabell
            if (roll.equalsIgnoreCase("Admin")) {
                idb.insert("INSERT INTO admin (aid) VALUES ('" + nyttAid + "')");
            } else {
                idb.insert("INSERT INTO handlaggare (aid) VALUES ('" + nyttAid + "')");
            }

            JOptionPane.showMessageDialog(this, "Ny anställd har lagts till.\nLösenord: " + losenord);
            fyllAnstalldaLista(); // Uppdatera listan

        } catch (InfException e) {
            JOptionPane.showMessageDialog(this, "Fel vid tillägg: " + e.getMessage(), "Databasfel", JOptionPane.ERROR_MESSAGE);
        }
    

    }//GEN-LAST:event_btnLaggTillActionPerformed

    private void btnStangActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnStangActionPerformed
       dispose();
    }//GEN-LAST:event_btnStangActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AnstalldHantera.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AnstalldHantera.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AnstalldHantera.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AnstalldHantera.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                //new AnstalldHantera().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnLaggTill;
    private javax.swing.JButton btnStang;
    private javax.swing.JButton btnTaBort;
    private javax.swing.JComboBox<String> cbAvdelning;
    private javax.swing.JComboBox<String> cbRoll;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblAnstallda;
    private javax.swing.JLabel lblAvdelning;
    private javax.swing.JLabel lblEfternamn;
    private javax.swing.JLabel lblEpost;
    private javax.swing.JLabel lblFornamn;
    private javax.swing.JLabel lblRoll;
    private javax.swing.JLabel lblRubrik;
    private javax.swing.JLabel lblTelefon;
    private javax.swing.JList<String> lstAnstallda;
    private javax.swing.JTextField txtEfternamn;
    private javax.swing.JTextField txtEpost;
    private javax.swing.JTextField txtFornamn;
    private javax.swing.JTextField txtTelefon;
    // End of variables declaration//GEN-END:variables
}
