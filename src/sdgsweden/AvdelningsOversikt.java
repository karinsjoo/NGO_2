/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package sdgsweden;

import oru.inf.InfDB;
import oru.inf.InfException;
import java.util.ArrayList;
import java.util.HashMap;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;

/**
 *
 * @author karin
 */
public class AvdelningsOversikt extends javax.swing.JFrame {
    private InfDB idb;
    private AnvandareBehorighet anvandareBehorighet;

    /**
     * Creates new form AvdelningsOversikt
     */
    public AvdelningsOversikt(InfDB idb, AnvandareBehorighet anvandareBehorighet) {
        initComponents();
        this.idb = idb;
        this.anvandareBehorighet = anvandareBehorighet;
    }
    
    private void visaPersonalPaAvdelning() {
        try {
            String sql = "SELECT fornamn, efternamn, epost FROM anstalld WHERE avdelning = '" + anvandareBehorighet.avdelningId + "'";
            ArrayList<HashMap<String, String>> resultat = idb.fetchRows(sql);

            DefaultListModel<String> modell = new DefaultListModel<>();

            for (HashMap<String, String> rad : resultat) {
                String radText = rad.get("fornamn") + " " + rad.get("efternamn") + " - " + rad.get("epost");
                modell.addElement(radText);
            }

            lstPersonal.setModel(modell);

        } catch (InfException e) {
            JOptionPane.showMessageDialog(this, "Kunde inte hämta personal: " + e.getMessage(), "Fel", JOptionPane.ERROR_MESSAGE);
        }
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblPersonal = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        lstPersonal = new javax.swing.JList<>();
        btnVisaPersonal = new javax.swing.JButton();
        txtSok = new javax.swing.JTextField();
        btnSok = new javax.swing.JButton();
        lblSok = new javax.swing.JLabel();
        btnAterstall = new javax.swing.JButton();
        txtEpost = new javax.swing.JTextField();
        lblSokepost = new javax.swing.JLabel();
        btnStang = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lblPersonal.setText("Personal på min Avdelning");

        lstPersonal.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { " ", " ", " ", " " };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane1.setViewportView(lstPersonal);

        btnVisaPersonal.setText("Visa Personal");
        btnVisaPersonal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVisaPersonalActionPerformed(evt);
            }
        });

        btnSok.setText("Sök");
        btnSok.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSokActionPerformed(evt);
            }
        });

        lblSok.setText("Sök namn");

        btnAterstall.setText("Återställ");
        btnAterstall.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAterstallActionPerformed(evt);
            }
        });

        lblSokepost.setText("Sök Epost");

        btnStang.setText("Stäng");
        btnStang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnStangActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblPersonal, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnVisaPersonal)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 16, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(lblSok, javax.swing.GroupLayout.DEFAULT_SIZE, 61, Short.MAX_VALUE)
                            .addComponent(lblSokepost, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(64, 64, 64)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtEpost, javax.swing.GroupLayout.DEFAULT_SIZE, 115, Short.MAX_VALUE)
                            .addComponent(txtSok))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnSok, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btnAterstall, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnStang)
                .addGap(65, 65, 65))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPersonal)
                    .addComponent(btnVisaPersonal)
                    .addComponent(txtSok, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblSok))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtEpost, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnSok)
                            .addComponent(lblSokepost))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnAterstall)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 261, Short.MAX_VALUE)
                .addComponent(btnStang)
                .addGap(55, 55, 55))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnVisaPersonalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVisaPersonalActionPerformed
        visaPersonalPaAvdelning();
    }//GEN-LAST:event_btnVisaPersonalActionPerformed

    private void btnSokActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSokActionPerformed
                                            
       
        String sokterm = txtSok.getText().trim();
        String ePost = txtEpost.getText().trim();

        if (sokterm.isEmpty() && ePost.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Ange ett namn eller e-post att söka efter.");
            return;
        }

        if (!sokterm.isEmpty() && !Validering.arText(sokterm)) {
            JOptionPane.showMessageDialog(this, "Namnet får bara innehålla bokstäver, siffror, mellanslag och bindestreck.");
            return;
        }

        if (!ePost.isEmpty() && !Validering.arEpost(ePost)) {
            JOptionPane.showMessageDialog(this, "E-postadressen är inte i korrekt format.");
            return;
        }

        try {
            String sql = "SELECT fornamn, efternamn, epost FROM anstalld WHERE avdelning = '" + anvandareBehorighet.avdelningId + "'";

            if (!sokterm.isEmpty()) {
                sql += " AND (fornamn LIKE '%" + sokterm + "%' OR efternamn LIKE '%" + sokterm + "%')";
            }

            if (!ePost.isEmpty()) {
                sql += " AND epost LIKE '%" + ePost + "%'";
            }

            ArrayList<HashMap<String, String>> resultat = idb.fetchRows(sql);
            DefaultListModel<String> modell = new DefaultListModel<>();

            for (HashMap<String, String> rad : resultat) {
                String fornamn = rad.get("fornamn");
                String efternamn = rad.get("efternamn");
                String epost = rad.get("epost");
                modell.addElement(fornamn + " " + efternamn + " - " + epost);
            }

            lstPersonal.setModel(modell);

        } catch (InfException e) {
            JOptionPane.showMessageDialog(this, "Fel vid sökning: " + e.getMessage());
        }
    

    }//GEN-LAST:event_btnSokActionPerformed

    private void btnAterstallActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAterstallActionPerformed
       
        try {
            String sql = "SELECT fornamn, efternamn, epost FROM anstalld WHERE avdelning = '" + anvandareBehorighet.avdelningId + "'";
            ArrayList<HashMap<String, String>> resultat = idb.fetchRows(sql);
            DefaultListModel<String> modell = new DefaultListModel<>();

            for (HashMap<String, String> rad : resultat) {
                String fornamn = rad.get("fornamn");
                String efternamn = rad.get("efternamn");
                String epost = rad.get("epost");
                modell.addElement(fornamn + " " + efternamn + " - " + epost);
            }

            lstPersonal.setModel(modell);
            txtSok.setText(""); // Töm sökfältet

        } catch (InfException e) {
            JOptionPane.showMessageDialog(this, "Kunde inte hämta personal: " + e.getMessage());
        }


    }//GEN-LAST:event_btnAterstallActionPerformed

    private void btnStangActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnStangActionPerformed
           dispose();
    }//GEN-LAST:event_btnStangActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AvdelningsOversikt.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AvdelningsOversikt.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AvdelningsOversikt.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AvdelningsOversikt.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                //new AvdelningsOversikt().setVisible(true);
            }
        });
   }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAterstall;
    private javax.swing.JButton btnSok;
    private javax.swing.JButton btnStang;
    private javax.swing.JButton btnVisaPersonal;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblPersonal;
    private javax.swing.JLabel lblSok;
    private javax.swing.JLabel lblSokepost;
    private javax.swing.JList<String> lstPersonal;
    private javax.swing.JTextField txtEpost;
    private javax.swing.JTextField txtSok;
    // End of variables declaration//GEN-END:variables
}
