/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package sdgsweden;

import oru.inf.InfDB;
import oru.inf.InfException;
import javax.swing.JOptionPane;
import java.util.HashMap;
import javax.swing.*;
import java.util.ArrayList;
import java.util.List;

/**
 *
 * @author erikaekholm
 */
public class LaggTillPartnersProjektledare extends javax.swing.JFrame {
    private final InfDB idb;
    private final String aid;
    
    /**
     * Creates new form LaggTillPartnersProjektledare
     * @param idb
     * @param aid
     */
    public LaggTillPartnersProjektledare(InfDB idb, String aid) {
        this.idb = idb;
        this.aid = aid;
        initComponents();
        setLayout(null);
        setLocationRelativeTo(null); // Fönstret hamnar i mitten av datorskärmen
        laddaProjektchefensProjekt();
        laddaPartners();
        setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE); // Stänger MinaUppgifterPopup när man trycker på krysset i rutan utan att stänga ner hela programmet
        
        // Lägger till den användare som är inloggad direkt under lblinloggadanvandare
        try{
            String query = "SELECT fornamn, efternamn FROM anstalld WHERE aid = '" + aid + "'";
            HashMap<String, String> resultat = idb.fetchRow(query);
            
            if(resultat != null){
                lblInloggAnvandare.setText("Inloggad som: " + resultat.get("fornamn") + " " + resultat.get("efternamn"));
            } else {
                lblInloggAnvandare.setText("inloggad som: Okänd");
            }
        } catch(InfException ex){
            lblInloggAnvandare.setText("Fel vid hämtning av användarnamn!");
            System.out.println("Fel vid hämtning av användarnamn" + ex.getMessage());
        }
    }
    
    private void laddaProjektchefensProjekt(){
    
        try{
            jcbValjProjekt.removeAllItems(); // Tar bort gamla objekt
            String query = "SELECT projektnamn FROM projekt WHERE projektchef = " + aid;
            ArrayList<String> projektNamnLista = idb.fetchColumn(query);

        if (projektNamnLista != null) {
            for (String projektnamn : projektNamnLista) {
                jcbValjProjekt.addItem(projektnamn);
            }
        }
        } catch(InfException ex){
            System.out.println("Fel vid laddning av projekt: " + ex.getMessage());
            JOptionPane.showMessageDialog(this, "Fel vid laddning av pjojekt! ", "Fel", JOptionPane.ERROR_MESSAGE);
        }
    }
    
    private void laddaPartners(){
        try {
            String query = "SELECT namn FROM partner";
            ArrayList<String> partnerLista = idb.fetchColumn(query);

        if (partnerLista != null) {
            jlistPartners.setListData(partnerLista.toArray(new String[0]));
        }
            } catch (InfException ex) {
        System.out.println("Fel vid laddning av partners: " + ex.getMessage());
        JOptionPane.showMessageDialog(this, "Fel vid laddning av partners! ", "Fel", JOptionPane.ERROR_MESSAGE);
    }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jcbValjProjekt = new javax.swing.JComboBox<>();
        jscrPlistPartner = new javax.swing.JScrollPane();
        jlistPartners = new javax.swing.JList<>();
        btnSparaPartner = new javax.swing.JButton();
        lblScrollValjProjekt = new javax.swing.JLabel();
        lblInloggAnvandare = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jcbValjProjekt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbValjProjektActionPerformed(evt);
            }
        });

        jscrPlistPartner.setViewportView(jlistPartners);

        btnSparaPartner.setText("Spara Partner till Projekt");
        btnSparaPartner.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSparaPartnerActionPerformed(evt);
            }
        });

        lblScrollValjProjekt.setText("Välj ett av dina projekt du vill lägga till en partner!");

        lblInloggAnvandare.setText("Inloggad Användare SDG sweden");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnSparaPartner)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jcbValjProjekt, javax.swing.GroupLayout.PREFERRED_SIZE, 288, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblScrollValjProjekt)
                            .addComponent(lblInloggAnvandare, javax.swing.GroupLayout.PREFERRED_SIZE, 288, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(31, 31, 31)
                        .addComponent(jscrPlistPartner, javax.swing.GroupLayout.PREFERRED_SIZE, 379, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(33, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(lblInloggAnvandare)
                .addGap(47, 47, 47)
                .addComponent(lblScrollValjProjekt)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jcbValjProjekt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jscrPlistPartner, javax.swing.GroupLayout.DEFAULT_SIZE, 264, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(btnSparaPartner)
                .addGap(34, 34, 34))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jcbValjProjektActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbValjProjektActionPerformed

    }//GEN-LAST:event_jcbValjProjektActionPerformed

    private void btnSparaPartnerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSparaPartnerActionPerformed
        // TODO add your handling code here:
        try {
        String valtProjekt = jcbValjProjekt.getSelectedItem().toString(); 
        List<String> valdaPartners = jlistPartners.getSelectedValuesList();

        if (valtProjekt.isEmpty() || valdaPartners.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Välj ett projekt och minst en partner!", "Fel", JOptionPane.ERROR_MESSAGE);
            return;
        }

        // Hämta projektets ID från dess namn
        String projektQuery = "SELECT pid FROM projekt WHERE projektnamn = '" + valtProjekt + "'";
        String projektIdStr = idb.fetchSingle(projektQuery);
        int projektId = Integer.parseInt(projektIdStr);
       for (String partnerNamn : valdaPartners) {
            // Hämta partnerns ID från dess namn
            String partnerQuery = "SELECT pid FROM partner WHERE namn = '" + partnerNamn + "'";
            String partnerIdStr = idb.fetchSingle(partnerQuery);
            int partnerId = Integer.parseInt(partnerIdStr);

            // Spara koppling mellan projekt och partner
            String insertQuery = "INSERT INTO projekt_partner (pid, partner_pid) VALUES (" + projektId + ", " + partnerId + ")";
            idb.insert(insertQuery);

            JOptionPane.showMessageDialog(this, "Partner " + partnerNamn + " har sparats till projekt " + valtProjekt, "Info", JOptionPane.INFORMATION_MESSAGE);
        }
    } catch (InfException ex) {
        System.out.println("Fel vid sparning av partner: " + ex.getMessage());
        ex.printStackTrace();
        JOptionPane.showMessageDialog(this, "Fel vid sparning av partner!", "Fel", JOptionPane.ERROR_MESSAGE);
    } 
        
    }//GEN-LAST:event_btnSparaPartnerActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(LaggTillPartnersProjektledare.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(LaggTillPartnersProjektledare.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(LaggTillPartnersProjektledare.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(LaggTillPartnersProjektledare.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
             //   new LaggTillPartnersProjektledare().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSparaPartner;
    private javax.swing.JComboBox<String> jcbValjProjekt;
    private javax.swing.JList<String> jlistPartners;
    private javax.swing.JScrollPane jscrPlistPartner;
    private javax.swing.JLabel lblInloggAnvandare;
    private javax.swing.JLabel lblScrollValjProjekt;
    // End of variables declaration//GEN-END:variables
}
