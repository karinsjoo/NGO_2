/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package sdgsweden;

import oru.inf.InfDB;
import oru.inf.InfException;
import javax.swing.JOptionPane;
import java.util.HashMap;
import javax.swing.*;
import java.util.ArrayList;

/**
 *
 * @author erikaekholm
 */
public class LaggTillProjektAdmin extends javax.swing.JFrame {
    private final InfDB idb;
    private final String aid;
    
    /**
     * Creates new form LaggTillProjektAdmin
     */
    public LaggTillProjektAdmin(InfDB idb, String aid) {
        this.idb = idb;
        this.aid = aid;
        initComponents();
        setLayout(null);
        setLocationRelativeTo(null); // Fönstret hamnar i mitten av datorskärmen
        setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE); // Stänger MinaUppgifterPopup när man trycker på krysset i rutan utan att stänga ner hela programmet
        laddaNyttProjektID();
        laddaLander();
        laddaStatus();
        laddaProjektchefer();
        
    // Tomma textfält till att börja med
    txtpid.setEditable(false);
    txtProjektnamn.setText("");
    txtBeskrivning.setText("");
    txtKostnad.setText("");
    txtPrioritet.setText("");
    txtSlutdatum.setText("");
    txtStartdatum.setText("");
    setVisible(true);
    }
    
    public void laddaNyttProjektID(){
    //SQL för högsta numret pid
        try {
        // SQL-fråga för att hitta det senaste (högsta) projekt-ID
        String query = "SELECT MAX(pid) FROM projekt";
        String senastePidStr = idb.fetchSingle(query); 

        int nyttPid = 1; // Om inga projekt finns, starta från 1

        if (senastePidStr != null) {
            nyttPid = Integer.parseInt(senastePidStr) + 1; // Nästa lediga ID
        }

        //Visa det nya projekt-ID:t i txtpid, dvs ladda i txtpid
        txtpid.setText(String.valueOf(nyttPid));
        txtpid.setVisible(true);

    } catch (InfException ex) {
        System.out.println("Fel vid hämtning av projekt-ID: " + ex.getMessage());
        JOptionPane.showMessageDialog(this, "Fel vid hämtning av projekt-ID!", "Fel", JOptionPane.ERROR_MESSAGE);
    }
    }
    
    public void laddaLander(){
        try {
        String query = "SELECT lid FROM land"; // Hämtar unika länder
        ArrayList<String> landLista = idb.fetchColumn(query);

        if (landLista != null) {
            jcbLander.removeAllItems(); // Rensar gamla val
            for (String land : landLista) {
                jcbLander.addItem(land); // Lägg till länderna i ComboBoxen
            }
        }
    } catch (InfException ex) {
        System.out.println("Fel vid hämtning av länder: " + ex.getMessage());
        JOptionPane.showMessageDialog(this, "Fel vid hämtning av länder!", "Fel", JOptionPane.ERROR_MESSAGE);
    }
    }
    
    public void laddaStatus(){
            try {
        String query = "SELECT status FROM projekt"; // Hämtar unika länder
        ArrayList<String> statusLista = idb.fetchColumn(query);

        if (statusLista != null) {
            jcbStatus.removeAllItems(); // Rensar gamla val
            for (String land : statusLista) {
                jcbStatus.addItem(land); // Lägg till länderna i ComboBoxen
            }
        }
    } catch (InfException ex) {
        System.out.println("Fel vid hämtning av länder: " + ex.getMessage());
        JOptionPane.showMessageDialog(this, "Fel vid hämtning av länder!", "Fel", JOptionPane.ERROR_MESSAGE);
    }
    
    }
    
    public void laddaProjektchefer(){
     try {
        String query = "SELECT projektchef FROM projekt"; // Filtrerar endast projektchefer
        ArrayList<String> chefLista = idb.fetchColumn(query);

        if (chefLista != null) {
            jcbProjektchef.removeAllItems(); // Rensar gamla val
            for (String chef : chefLista) {
                jcbProjektchef.addItem(chef); // Lägg till chefer i ComboBox
            }
        } else {
            JOptionPane.showMessageDialog(this, "Inga projektchefer hittades!", "Info", JOptionPane.INFORMATION_MESSAGE);
        }
    } catch (InfException ex) {
        System.out.println("Fel vid hämtning av projektchefer: " + ex.getMessage());
        JOptionPane.showMessageDialog(this, "Fel vid hämtning av projektchefer!", "Fel", JOptionPane.ERROR_MESSAGE);
    }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtProjektnamn = new javax.swing.JTextField();
        txtBeskrivning = new javax.swing.JTextField();
        txtStartdatum = new javax.swing.JTextField();
        txtSlutdatum = new javax.swing.JTextField();
        txtKostnad = new javax.swing.JTextField();
        txtPrioritet = new javax.swing.JTextField();
        txtpid = new javax.swing.JTextField();
        btnSparaNyttProjekt = new javax.swing.JButton();
        lblProjektID = new javax.swing.JLabel();
        lblProjektnamn = new javax.swing.JLabel();
        lblBeskrivning = new javax.swing.JLabel();
        lblStartdatum = new javax.swing.JLabel();
        lblSlutdatum = new javax.swing.JLabel();
        lblKostnad = new javax.swing.JLabel();
        lblStatus = new javax.swing.JLabel();
        lblPrioritet = new javax.swing.JLabel();
        lblProjektchef = new javax.swing.JLabel();
        lblLand = new javax.swing.JLabel();
        jcbLander = new javax.swing.JComboBox<>();
        jcbStatus = new javax.swing.JComboBox<>();
        jcbProjektchef = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        txtProjektnamn.setText("Projektnamn");

        txtBeskrivning.setText("Beskrivning");
        txtBeskrivning.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtBeskrivningActionPerformed(evt);
            }
        });

        txtStartdatum.setText("Startdatum");

        txtSlutdatum.setText("Slutdatum");

        txtKostnad.setText("Kostnad");

        txtPrioritet.setText("Prioritet");

        txtpid.setText("PID");

        btnSparaNyttProjekt.setText("Spara Nytt Projekt");
        btnSparaNyttProjekt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSparaNyttProjektActionPerformed(evt);
            }
        });

        lblProjektID.setText("Projekt-ID");

        lblProjektnamn.setText("Projektnamn");

        lblBeskrivning.setText("Beskrivning");

        lblStartdatum.setText("Startdatum (Format YYYY-MM-DD)");

        lblSlutdatum.setText("Slutdatum (Format YYYY-MM-DD)");

        lblKostnad.setText("Kostnad (xxxx.xxx)");

        lblStatus.setText("Status (Pågående, Planerat, Avslutat)");

        lblPrioritet.setText("Prioritet (Hög, Medel, Låg");

        lblProjektchef.setText("Projektchef ID");

        lblLand.setText("Land");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnSparaNyttProjekt, javax.swing.GroupLayout.PREFERRED_SIZE, 226, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(79, 79, 79))
            .addGroup(layout.createSequentialGroup()
                .addGap(82, 82, 82)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtProjektnamn, javax.swing.GroupLayout.DEFAULT_SIZE, 144, Short.MAX_VALUE)
                    .addComponent(txtBeskrivning)
                    .addComponent(txtStartdatum)
                    .addComponent(txtSlutdatum)
                    .addComponent(txtKostnad)
                    .addComponent(txtPrioritet)
                    .addComponent(txtpid)
                    .addComponent(jcbLander, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jcbProjektchef, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jcbStatus, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(62, 62, 62)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lblProjektID, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblProjektnamn, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblBeskrivning, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblKostnad, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(lblLand, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lblProjektchef, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 144, Short.MAX_VALUE))
                    .addComponent(lblSlutdatum, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblStartdatum, javax.swing.GroupLayout.DEFAULT_SIZE, 234, Short.MAX_VALUE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(lblPrioritet, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lblStatus, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 221, Short.MAX_VALUE)))
                .addContainerGap(118, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(78, 78, 78)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtpid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblProjektID))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtProjektnamn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblProjektnamn))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtBeskrivning, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblBeskrivning))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtStartdatum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblStartdatum))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtSlutdatum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblSlutdatum))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtKostnad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblKostnad))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblStatus)
                    .addComponent(jcbStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtPrioritet, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblPrioritet))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblProjektchef)
                    .addComponent(jcbProjektchef, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblLand)
                    .addComponent(jcbLander, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 41, Short.MAX_VALUE)
                .addComponent(btnSparaNyttProjekt)
                .addGap(31, 31, 31))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtBeskrivningActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtBeskrivningActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtBeskrivningActionPerformed

    private void btnSparaNyttProjektActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSparaNyttProjektActionPerformed
        // TODO add your handling code here:
        int nyttPid = Integer.parseInt(txtpid.getText());
        String projektnamn = txtProjektnamn.getText();
        String beskrivning = txtBeskrivning.getText();
        String startdatum = txtStartdatum.getText();
        String slutdatum = txtSlutdatum.getText();
        double kostnad = Double.parseDouble(txtKostnad.getText());
        String valdStatus = jcbStatus.getSelectedItem().toString();
        String prioritet = txtPrioritet.getText();
        String valdProjektchef = jcbProjektchef.getSelectedItem().toString();
        String valtland = jcbLander.getSelectedItem().toString();

        try {
        //Skapa SQL-fråga utan `pid`
        String query = "INSERT INTO projekt(pid, projektnamn, beskrivning, startdatum, slutdatum, kostnad, status, prioritet, projektchef, land) VALUES ("
                        + nyttPid + ", '" + projektnamn + "', '" + beskrivning + "', '" 
                        + startdatum + "', '" + slutdatum + "', " 
                        + kostnad + ", '" + valdStatus + "', '"
                        + prioritet + "', " + valdProjektchef + ", " + valtland + ")";
        
        idb.insert(query);
        
         //Hämta senaste ID från databasen med `LAST_INSERT_ID()`
        String nyttPidQuery = "SELECT LAST_INSERT_ID()";
        String senastePid = idb.fetchSingle(nyttPidQuery);
        
       //Se till att `senastePid` inte är null
        if (senastePid != null) {
            txtpid.setText(senastePid); // Visa det nya projekt-ID:t i txtpid
            System.out.println("Senaste PID: " + senastePid); // Debugging
        } else {
            JOptionPane.showMessageDialog(this, "Fel vid hämtning av projekt-ID!", "Fel", JOptionPane.ERROR_MESSAGE);
        }

        JOptionPane.showMessageDialog(this, "Projektet har lagts till!", "Lyckades", JOptionPane.INFORMATION_MESSAGE);

    } catch (InfException ex) {
        JOptionPane.showMessageDialog(this, "Fel vid inmatning av projekt!", "Fel", JOptionPane.ERROR_MESSAGE);
        System.out.println("Fel vid projekt-skapning: " + ex.getMessage());
        ex.printStackTrace();
    } 
        
        
        
        
    }//GEN-LAST:event_btnSparaNyttProjektActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(LaggTillProjektAdmin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(LaggTillProjektAdmin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(LaggTillProjektAdmin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(LaggTillProjektAdmin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
             //   new LaggTillProjektAdmin().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSparaNyttProjekt;
    private javax.swing.JComboBox<String> jcbLander;
    private javax.swing.JComboBox<String> jcbProjektchef;
    private javax.swing.JComboBox<String> jcbStatus;
    private javax.swing.JLabel lblBeskrivning;
    private javax.swing.JLabel lblKostnad;
    private javax.swing.JLabel lblLand;
    private javax.swing.JLabel lblPrioritet;
    private javax.swing.JLabel lblProjektID;
    private javax.swing.JLabel lblProjektchef;
    private javax.swing.JLabel lblProjektnamn;
    private javax.swing.JLabel lblSlutdatum;
    private javax.swing.JLabel lblStartdatum;
    private javax.swing.JLabel lblStatus;
    private javax.swing.JTextField txtBeskrivning;
    private javax.swing.JTextField txtKostnad;
    private javax.swing.JTextField txtPrioritet;
    private javax.swing.JTextField txtProjektnamn;
    private javax.swing.JTextField txtSlutdatum;
    private javax.swing.JTextField txtStartdatum;
    private javax.swing.JTextField txtpid;
    // End of variables declaration//GEN-END:variables
}
