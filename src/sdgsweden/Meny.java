/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package sdgsweden;

import oru.inf.InfDB;
import oru.inf.InfException;
import java.util.ArrayList;
import java.util.HashMap;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import sdgsweden.MinaUppgifter;


/**
 *
 * @author karin
 */
public class Meny extends javax.swing.JFrame {
    private final InfDB idb; //Databsuppkoppling
    private String epost;
    private AnvandareBehorighet anvandareBehorighet;
    /**
     * Creates new form Meny
     */
    public Meny(InfDB idb, String epost) {
        this.idb = idb;
        this.epost = epost;
        
         var aId = getId(epost);
        this.anvandareBehorighet = getAnvandareBehorighet(aId);

        
        initComponents();
       
        
        
    }
    
     private AnvandareBehorighet getAnvandareBehorighet(String aId) //
    {
        boolean isAdmin = false;
        boolean isHandlaggare = false;
        boolean isProjektChef = false;
        String avdelningId = "";

        //hämta admin behörighet
        try {
            String sqlFraga = "SELECT aid FROM admin WHERE aid = '" + aId + "'";

            //Hämta resultat från DB: 
            String resultat = idb.fetchSingle(sqlFraga);

            if (resultat != null && aId.equals(resultat)) {
                isAdmin = true;
            }
        } catch (InfException e) {
            //lblFelDatumFormat.setText("Fel uppstod vid hämtning av projekt.");
            System.out.println("Databasfel: " + e.getMessage());
        }

        //hämta handläggare behörighet
        try {
            String sqlFraga = "SELECT aid FROM handlaggare WHERE aid = '" + aId + "'";

            //Hämta resultat från DB: 
            String resultat = idb.fetchSingle(sqlFraga);

            if (resultat != null && aId.equals(resultat)) {
                isHandlaggare = true;
            }
        } catch (InfException e) {
            //lblFelDatumFormat.setText("Fel uppstod vid hämtning av projekt.");
            System.out.println("Databasfel: " + e.getMessage());
        }

        //hämta projektchef behörighet
        try {
            String sqlFraga = "SELECT projektchef FROM projekt WHERE projektchef = '" + aId + "'";

            //Hämta resultat från DB: 
            String resultat = idb.fetchSingle(sqlFraga);

            if (resultat != null && aId.equals(resultat)) {
                isProjektChef = true;
            }
        } catch (InfException e) {
            //lblFelDatumFormat.setText("Fel uppstod vid hämtning av projekt.");
            System.out.println("Databasfel: " + e.getMessage());
        }

        //hämta avdelningId
        try {
            String sqlFraga = "SELECT avdelning FROM anstalld WHERE aid = '" + aId + "'";

            //Hämta resultat från DB: 
            String resultat = idb.fetchSingle(sqlFraga);
            avdelningId = resultat;

        } catch (InfException e) {
            //lblFelDatumFormat.setText("Fel uppstod vid hämtning av projekt.");
            System.out.println("Databasfel: " + e.getMessage());
        }

        var anvandareBehorighet = new AnvandareBehorighet();
        anvandareBehorighet.isAdmin = isAdmin;
        anvandareBehorighet.isHandlaggare = isHandlaggare;
        anvandareBehorighet.isProjektChef = isProjektChef;
        anvandareBehorighet.aId = aId;
        anvandareBehorighet.avdelningId = avdelningId;

        return anvandareBehorighet;

    }
     
      private String getId(String epost) {
        //hämta aId

        String aId = "";

        try {
            String sqlFraga = "SELECT aid FROM anstalld WHERE epost = '" + epost + "'";

            //Hämta resultat från DB: 
            String resultat = idb.fetchSingle(sqlFraga);

            aId = resultat;

        } catch (InfException e) {
            // lblFelDatumFormat.setText("Fel uppstod vid hämtning av projekt.");
            System.out.println("Databasfel: " + e.getMessage());
        }

        return aId;
    }

    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnVisaProjektOversikt = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        btnHallbarhetsMal = new javax.swing.JButton();
        btnMinaUppgifter = new javax.swing.JButton();
        btnAvdelning = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        btnVisaProjektOversikt.setText("Projekt");
        btnVisaProjektOversikt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVisaProjektOversiktActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel1.setText("Meny");

        btnHallbarhetsMal.setText("Hållbarhetsmål");
        btnHallbarhetsMal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHallbarhetsMalActionPerformed(evt);
            }
        });

        btnMinaUppgifter.setText("Mina Uppgifter");
        btnMinaUppgifter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMinaUppgifterActionPerformed(evt);
            }
        });

        btnAvdelning.setText("Avdelning");
        btnAvdelning.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAvdelningActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnVisaProjektOversikt, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnHallbarhetsMal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnMinaUppgifter, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnAvdelning, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(312, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(78, 78, 78)
                .addComponent(btnVisaProjektOversikt)
                .addGap(18, 18, 18)
                .addComponent(btnHallbarhetsMal)
                .addGap(18, 18, 18)
                .addComponent(btnMinaUppgifter)
                .addGap(18, 18, 18)
                .addComponent(btnAvdelning)
                .addContainerGap(137, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnVisaProjektOversiktActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVisaProjektOversiktActionPerformed
        
        new ProjektOversiktV2(idb, epost).setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_btnVisaProjektOversiktActionPerformed

    private void btnHallbarhetsMalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHallbarhetsMalActionPerformed
        new HallbarhetsMal(idb).setVisible(true);
    }//GEN-LAST:event_btnHallbarhetsMalActionPerformed

    private void btnMinaUppgifterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMinaUppgifterActionPerformed
        new MinaUppgifter(idb, anvandareBehorighet).setVisible(true);
    }//GEN-LAST:event_btnMinaUppgifterActionPerformed

    private void btnAvdelningActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAvdelningActionPerformed
        new AvdelningsOversikt(idb, anvandareBehorighet).setVisible(true);
    }//GEN-LAST:event_btnAvdelningActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Meny.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Meny.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Meny.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Meny.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                //new Meny().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAvdelning;
    private javax.swing.JButton btnHallbarhetsMal;
    private javax.swing.JButton btnMinaUppgifter;
    private javax.swing.JButton btnVisaProjektOversikt;
    private javax.swing.JLabel jLabel1;
    // End of variables declaration//GEN-END:variables
}
