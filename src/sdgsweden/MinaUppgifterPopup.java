/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package sdgsweden;

import oru.inf.InfDB;
import oru.inf.InfException;
import javax.swing.JOptionPane;
import java.util.HashMap;
import javax.swing.*;



/**
 *
 * @author erikaekholm
 */
public class MinaUppgifterPopup extends javax.swing.JFrame {
    private final InfDB idb;
    private final String aid;
    
    /**
     * Creates new form MinaUppgifterPopup
     * @param idb
     * @param aid
     */
    public MinaUppgifterPopup(InfDB idb, String aid) {
        this.idb = idb;
        this.aid = aid;
        setSize(300, 250);
        setLayout(null);
        setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE); // Stänger MinaUppgifterPopup när man trycker på krysset i rutan utan att stänga ner hela programmet
        initComponents(); // Skrivs här för att använda sig av NetBeans GUI komponenter
        setLocationRelativeTo(null); // Fönstret hamnar i mitten av datorskärmen
        
        // Hämtar användare och deras uppgifter ifrån databasen
        try{
            String query = "SELECT fornamn, efternamn, adress, epost, telefon FROM anstalld WHERE aid = '" + aid + "'";
            HashMap<String, String> resultat = idb.fetchRow(query); // Med hjälp av nyckeln aid hämtar vi hela raden och lagrar
            
            if(resultat != null){ // Om det finns data i fälten, dvs inte lika med null gör detta nedan
            // Ge info till textfält
            txtFornamn.setText(resultat.get("fornamn"));
            txtEfternamn.setText(resultat.get("efternamn"));
            txtAdress.setText(resultat.get("adress"));
            txtEpost.setText(resultat.get("epost"));
            txtTelefon.setText(resultat.get("telefon"));
            } else {
              //  JOptionPane.showMessageDialog(this, "Inga Uppgifter hittades!" + ex.getMessage(), "Fel", JOptionPane.ERROR_MESSAGE);
                System.out.println("Inga uppgifter hittades!");
            }
        
        } catch(InfException ex){
               // JOptionPane.showMessageDialog(this, "Fel vid hämtning av användaruppgifter!", JOptionPane.ERROR_MESSAGE);
               // System.out.println("Fel vid hämtning av användaruppgifter!"); //
        } setVisible(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnSparaUppgifter = new javax.swing.JButton();
        txtFornamn = new javax.swing.JTextField();
        txtEfternamn = new javax.swing.JTextField();
        txtAdress = new javax.swing.JTextField();
        txtEpost = new javax.swing.JTextField();
        txtTelefon = new javax.swing.JTextField();
        lblTitelMinaUppgifter = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        btnSparaUppgifter.setText("Spara");
        btnSparaUppgifter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSparaUppgifterActionPerformed(evt);
            }
        });

        txtFornamn.setText("Förnamn: ");
        txtFornamn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtFornamnActionPerformed(evt);
            }
        });

        txtEfternamn.setText("Efternamn:");

        txtAdress.setText("Adress:");

        txtEpost.setText("Epost:");

        txtTelefon.setText("Telefon: ");

        lblTitelMinaUppgifter.setText("Mina Uppgifter");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnSparaUppgifter)
                .addGap(66, 66, 66))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtFornamn)
                            .addComponent(txtEfternamn, javax.swing.GroupLayout.DEFAULT_SIZE, 239, Short.MAX_VALUE)
                            .addComponent(txtAdress)
                            .addComponent(txtEpost)
                            .addComponent(txtTelefon)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(91, 91, 91)
                        .addComponent(lblTitelMinaUppgifter, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(121, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(lblTitelMinaUppgifter)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtFornamn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtEfternamn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtAdress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtEpost, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtTelefon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 74, Short.MAX_VALUE)
                .addComponent(btnSparaUppgifter)
                .addGap(15, 15, 15))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtFornamnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtFornamnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtFornamnActionPerformed

    private void btnSparaUppgifterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSparaUppgifterActionPerformed
        // TODO add your handling code here:
        // Valideringsklass
        if(Validation.okTelefon(txtTelefon.getText()) && 
                Validation.okEpost(txtEpost.getText()) &&
                Validation.okNullEllerTom(txtAdress.getText()) &&
                Validation.okNullEllerTom(txtFornamn.getText()) &&
                Validation.okNullEllerTom(txtEfternamn.getText())) {
    } else {
            JOptionPane.showMessageDialog(this, "Felaktiga inmatningar!", "Validering fel", JOptionPane.ERROR_MESSAGE);
            return; // Om metoden inte fungerar så avbryts den
        }
        
        try{
            String query = "UPDATE anstalld SET fornamn = '" + txtFornamn.getText() + "', efternamn = '" + txtEfternamn.getText() +
                    "', adress = '" + txtAdress.getText() + "', epost = '" + txtEpost.getText() + "', telefon = '" + txtTelefon.getText() +
                    "' WHERE aid = '" + aid + "'";
            idb.update(query); // Uppdaterar databasen
            // Meddelande att databasen har uppdateras
           JOptionPane.showMessageDialog(this, "Dina uppgifter har uppdaterats!", "Uppdatering lyckades", JOptionPane.INFORMATION_MESSAGE);
        }catch(InfException ex){
           JOptionPane.showMessageDialog(this, "Fel vid uppdatering: " + ex.getMessage(), "Fel", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnSparaUppgifterActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MinaUppgifterPopup.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MinaUppgifterPopup.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MinaUppgifterPopup.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MinaUppgifterPopup.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
               // new MinaUppgifterPopup().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSparaUppgifter;
    private javax.swing.JLabel lblTitelMinaUppgifter;
    private javax.swing.JTextField txtAdress;
    private javax.swing.JTextField txtEfternamn;
    private javax.swing.JTextField txtEpost;
    private javax.swing.JTextField txtFornamn;
    private javax.swing.JTextField txtTelefon;
    // End of variables declaration//GEN-END:variables


    
}
