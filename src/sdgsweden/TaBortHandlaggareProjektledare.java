/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package sdgsweden;

import oru.inf.InfDB;
import oru.inf.InfException;
import javax.swing.JOptionPane;
import java.util.HashMap;
import javax.swing.*;
import java.util.ArrayList;
import java.util.List;
/**
 *
 * @author erikaekholm
 */
public class TaBortHandlaggareProjektledare extends javax.swing.JFrame {
    private final InfDB idb;
    private final String aid;
    
    /**
     * Creates new form TaBortHandlaggareProjektledare
     * @param idb
     * @param aid
     */
    public TaBortHandlaggareProjektledare(InfDB idb, String aid) {
        this.idb = idb;
        this.aid = aid;
        initComponents();
        setLayout(null);
        setLocationRelativeTo(null); // Fönstret hamnar i mitten av datorskärmen
        laddaProjektChefensProjekt();
        laddaHandledareTillProjekt();
        setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE); // Stänger MinaUppgifterPopup när man trycker på krysset i rutan utan att stänga ner hela programmet
        
        // Lägger till den användare som är inloggad direkt under lblinloggadanvandare
        try{
            String query = "SELECT fornamn, efternamn FROM anstalld WHERE aid = '" + aid + "'";
            HashMap<String, String> resultat = idb.fetchRow(query);
            
            if(resultat != null){
                lblInloggadAnvandare.setText("Inloggad som: " + resultat.get("fornamn") + " " + resultat.get("efternamn"));
            } else {
                lblInloggadAnvandare.setText("inloggad som: Okänd");
            }
        } catch(InfException ex){
            lblInloggadAnvandare.setText("Fel vid hämtning av användarnamn!");
            System.out.println("Fel vid hämtning av användarnamn" + ex.getMessage());
        }
    }
    
    public void laddaProjektChefensProjekt(){
        
        try{
            jcbProjektLista.removeAllItems(); // Tar bort gamla objekt
            String query = "SELECT projektnamn FROM projekt WHERE projektchef = " + aid;
            ArrayList<String> projektNamnLista = idb.fetchColumn(query);

        if (projektNamnLista != null) {
            for (String projektnamn : projektNamnLista) {
                jcbProjektLista.addItem(projektnamn);
            }
        }
        } catch(InfException ex){
            System.out.println("Fel vid laddning av projekt: " + ex.getMessage());
            JOptionPane.showMessageDialog(this, "Fel vid laddning av pjojekt! ", "Fel", JOptionPane.ERROR_MESSAGE);
        }
    }
    
    public void laddaHandledareTillProjekt(){
        try {
            // Hämta valt projektnamn
        String valtProjekt = (String) jcbProjektLista.getSelectedItem();

        // Hämta rätt projekt-ID
        String projektQuery = "SELECT pid FROM projekt WHERE projektnamn = '" + valtProjekt + "'";
        String projektIdStr = idb.fetchSingle(projektQuery);

        if (projektIdStr == null) {
            JOptionPane.showMessageDialog(this, "Kunde inte hämta projekt-ID!", "Fel", JOptionPane.ERROR_MESSAGE);
            return;
        }

        int projektId = Integer.parseInt(projektIdStr);
            
            // Filtrera endast handläggare kopplade till det valda projektet
            String query = "SELECT CONCAT(fornamn, ' ', efternamn) AS namn FROM anstalld " +
                       "JOIN ans_proj ON anstalld.aid = ans_proj.aid " +
                       "WHERE ans_proj.pid = " + projektId;
            ArrayList<String> partnerLista = idb.fetchColumn(query);

        if (partnerLista != null) {
            jlistHandlaggare.setListData(partnerLista.toArray(new String[0]));
        }
            } catch (InfException ex) {
        System.out.println("Fel vid laddning av Handläggare: " + ex.getMessage());
        JOptionPane.showMessageDialog(this, "Fel vid laddning av Handläggare! ", "Fel", JOptionPane.ERROR_MESSAGE);
    }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblInloggadAnvandare = new javax.swing.JLabel();
        jcbProjektLista = new javax.swing.JComboBox<>();
        jscHandlaggareLista = new javax.swing.JScrollPane();
        jlistHandlaggare = new javax.swing.JList<>();
        btnTaBortHandlaggareProjekt = new javax.swing.JButton();
        lblValjProjekt = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lblInloggadAnvandare.setText("Inloggad Användare SDG Sweden");

        jcbProjektLista.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbProjektListaActionPerformed(evt);
            }
        });

        jscHandlaggareLista.setViewportView(jlistHandlaggare);

        btnTaBortHandlaggareProjekt.setText("Ta Bort Handläggare ifrån Projekt");
        btnTaBortHandlaggareProjekt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTaBortHandlaggareProjektActionPerformed(evt);
            }
        });

        lblValjProjekt.setText("Välj Projekt där du vill ta bort Handläggare");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnTaBortHandlaggareProjekt, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(lblInloggadAnvandare, javax.swing.GroupLayout.PREFERRED_SIZE, 289, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(lblValjProjekt, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jcbProjektLista, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGap(52, 52, 52)
                            .addComponent(jscHandlaggareLista, javax.swing.GroupLayout.PREFERRED_SIZE, 299, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(40, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(lblInloggadAnvandare)
                .addGap(86, 86, 86)
                .addComponent(lblValjProjekt)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jcbProjektLista, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jscHandlaggareLista, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 47, Short.MAX_VALUE)
                .addComponent(btnTaBortHandlaggareProjekt)
                .addGap(31, 31, 31))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnTaBortHandlaggareProjektActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTaBortHandlaggareProjektActionPerformed
        // TODO add your handling code here:
        try {
        String valtProjekt = jcbProjektLista.getSelectedItem().toString();
        String markeradHandlaggare = jlistHandlaggare.getSelectedValue();

        if (valtProjekt.isEmpty() || markeradHandlaggare == null) {
            JOptionPane.showMessageDialog(this, "Välj ett projekt och en Handläggare att ta bort!", "Fel", JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        // Hämta projektets ID
        String projektQuery = "SELECT pid FROM projekt WHERE projektnamn = '" + valtProjekt + "'";
        String projektIdStr = idb.fetchSingle(projektQuery);
        int projektId = Integer.parseInt(projektIdStr);

        // Hämta Handläggarens namn
        String handlaggareQuery = "SELECT aid FROM anstalld WHERE CONCAT(fornamn, ' ', efternamn) = '" + markeradHandlaggare + "'";
        String handlaggareIdStr = idb.fetchSingle(handlaggareQuery);
        int handlaggareId = Integer.parseInt(handlaggareIdStr);
        
                // Bekräfta borttagning med en popup
        int confirm = JOptionPane.showConfirmDialog(this, "Är du säker på att du vill ta bort " + markeradHandlaggare + " från projektet " + valtProjekt + "?", "Bekräfta borttagning", JOptionPane.YES_NO_OPTION);
        if (confirm != JOptionPane.YES_OPTION) {
            return;
        }

        // Ta bort kopplingen mellan handläggare och projekt
        String deleteQuery = "DELETE FROM ans_proj WHERE pid = " + projektId + " AND aid = " + handlaggareId;
        idb.delete(deleteQuery);
        
                // Uppdatera listan så borttagna handläggare inte visas i listan vid sortering
        laddaHandledareTillProjekt();

        JOptionPane.showMessageDialog(this, "Handläggare " + markeradHandlaggare + " har tagits bort från projekt " + valtProjekt, "Info", JOptionPane.INFORMATION_MESSAGE);

    } catch (InfException ex) {
        System.out.println("Fel vid borttagning av handläggare: " + ex.getMessage());
        ex.printStackTrace();
        JOptionPane.showMessageDialog(this, "Fel vid borttagning av handläggare!", "Fel", JOptionPane.ERROR_MESSAGE);
    }
        
    }//GEN-LAST:event_btnTaBortHandlaggareProjektActionPerformed

    private void jcbProjektListaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbProjektListaActionPerformed
        // TODO add your handling code here:
        laddaHandledareTillProjekt();
    }//GEN-LAST:event_jcbProjektListaActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TaBortHandlaggareProjektledare.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TaBortHandlaggareProjektledare.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TaBortHandlaggareProjektledare.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TaBortHandlaggareProjektledare.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
             //   new TaBortHandlaggareProjektledare().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnTaBortHandlaggareProjekt;
    private javax.swing.JComboBox<String> jcbProjektLista;
    private javax.swing.JList<String> jlistHandlaggare;
    private javax.swing.JScrollPane jscHandlaggareLista;
    private javax.swing.JLabel lblInloggadAnvandare;
    private javax.swing.JLabel lblValjProjekt;
    // End of variables declaration//GEN-END:variables
}
