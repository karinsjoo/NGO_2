/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package sdgsweden;

import oru.inf.InfDB;
import oru.inf.InfException;
import javax.swing.JOptionPane;
import java.util.HashMap;
import javax.swing.*;
import java.util.ArrayList;
import java.util.List;

/**
 *
 * @author erikaekholm
 */
public class TaBortPartnersProjektledare extends javax.swing.JFrame {
    private final InfDB idb;
    private final String aid;
    
    /**
     * Creates new form TaBortPartnersProjektledare
     */
    public TaBortPartnersProjektledare(InfDB idb, String aid) {
        this.idb = idb;
        this.aid = aid;
        initComponents();
        setLayout(null);
        setLocationRelativeTo(null); // Fönstret hamnar i mitten av datorskärmen
        laddaProjektchefensProjekt();
        laddaPartnersTillProjekt();
        setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE); // Stänger MinaUppgifterPopup när man trycker på krysset i rutan utan att stänga ner hela programmet
        
        // Lägger till den användare som är inloggad direkt under lblinloggadanvandare
        try{
            String query = "SELECT fornamn, efternamn FROM anstalld WHERE aid = '" + aid + "'";
            HashMap<String, String> resultat = idb.fetchRow(query);
            
            if(resultat != null){
                lblInloggadAnvandare.setText("Inloggad som: " + resultat.get("fornamn") + " " + resultat.get("efternamn"));
            } else {
                lblInloggadAnvandare.setText("inloggad som: Okänd");
            }
        } catch(InfException ex){
            lblInloggadAnvandare.setText("Fel vid hämtning av användarnamn!");
            System.out.println("Fel vid hämtning av användarnamn" + ex.getMessage());
        }
    }
    
        private void laddaProjektchefensProjekt(){
    
        try{
            jcbProjektTaBortProjektledare.removeAllItems(); // Tar bort gamla objekt
            String query = "SELECT projektnamn FROM projekt WHERE projektchef = " + aid;
            ArrayList<String> projektNamnLista = idb.fetchColumn(query);

        if (projektNamnLista != null) {
            for (String projektnamn : projektNamnLista) {
                jcbProjektTaBortProjektledare.addItem(projektnamn);
            }
        }
        } catch(InfException ex){
            System.out.println("Fel vid laddning av projekt: " + ex.getMessage());
            JOptionPane.showMessageDialog(this, "Fel vid laddning av pjojekt! ", "Fel", JOptionPane.ERROR_MESSAGE);
        }
    }
    
    private void laddaPartnersTillProjekt(){
        try {
        String valtProjekt = jcbProjektTaBortProjektledare.getSelectedItem().toString();
        String projektQuery = "SELECT pid FROM projekt WHERE projektnamn = '" + valtProjekt + "'";
        String projektIdStr = idb.fetchSingle(projektQuery);
        int projektId = Integer.parseInt(projektIdStr);

        // Hämta partners kopplade till det projektet
        String query = "SELECT partner.namn FROM partner "
                     + "JOIN projekt_partner ON partner.pid = projekt_partner.partner_pid "
                     + "WHERE projekt_partner.pid = " + projektId;
        ArrayList<String> partnerLista = idb.fetchColumn(query);

        if (partnerLista != null) {
            jlistPartners.setListData(partnerLista.toArray(new String[0]));
        } else {
            jlistPartners.setListData(new String[]{}); // Rensa listan om inga partners finns
        }
    } catch (InfException ex) {
        System.out.println("Fel vid laddning av partners: " + ex.getMessage());
        ex.printStackTrace();
    }
    
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnTaBortPartner = new javax.swing.JButton();
        jscrPartners = new javax.swing.JScrollPane();
        jlistPartners = new javax.swing.JList<>();
        lblInloggadAnvandare = new javax.swing.JLabel();
        jcbProjektTaBortProjektledare = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        btnTaBortPartner.setText("Ta bort Partner");
        btnTaBortPartner.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTaBortPartnerActionPerformed(evt);
            }
        });

        jscrPartners.setViewportView(jlistPartners);

        lblInloggadAnvandare.setText("Inloggad användare SDG Sweden");

        jcbProjektTaBortProjektledare.setToolTipText("");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnTaBortPartner, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(77, 77, 77))
            .addGroup(layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(lblInloggadAnvandare, javax.swing.GroupLayout.PREFERRED_SIZE, 242, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addComponent(jcbProjektTaBortProjektledare, 0, 254, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(jscrPartners, javax.swing.GroupLayout.PREFERRED_SIZE, 272, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(45, 45, 45))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(lblInloggadAnvandare)
                .addGap(55, 55, 55)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jscrPartners, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jcbProjektTaBortProjektledare, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 57, Short.MAX_VALUE)
                .addComponent(btnTaBortPartner)
                .addGap(27, 27, 27))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnTaBortPartnerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTaBortPartnerActionPerformed
        // TODO add your handling code here:
        try {
        String valtProjekt = jcbProjektTaBortProjektledare.getSelectedItem().toString();
        String markeradPartner = jlistPartners.getSelectedValue();

        if (valtProjekt.isEmpty() || markeradPartner == null) {
            JOptionPane.showMessageDialog(this, "Välj ett projekt och en partner att ta bort!", "Fel", JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        // Hämta projektets ID
        String projektQuery = "SELECT pid FROM projekt WHERE projektnamn = '" + valtProjekt + "'";
        String projektIdStr = idb.fetchSingle(projektQuery);
        int projektId = Integer.parseInt(projektIdStr);

        // Hämta partnerns ID
        String partnerQuery = "SELECT pid FROM partner WHERE namn = '" + markeradPartner + "'";
        String partnerIdStr = idb.fetchSingle(partnerQuery);
        int partnerId = Integer.parseInt(partnerIdStr);
        
                // Bekräfta borttagning med en popup
        int confirm = JOptionPane.showConfirmDialog(this, "Är du säker på att du vill ta bort " + markeradPartner + " från projektet " + valtProjekt + "?", "Bekräfta borttagning", JOptionPane.YES_NO_OPTION);
        if (confirm != JOptionPane.YES_OPTION) {
            return;
        }

        // Ta bort kopplingen mellan partner och projekt
        String deleteQuery = "DELETE FROM projekt_partner WHERE pid = " + projektId + " AND partner_pid = " + partnerId;
        idb.delete(deleteQuery);
        
                // Uppdatera listan
        laddaPartnersTillProjekt();

        JOptionPane.showMessageDialog(this, "Partner " + markeradPartner + " har tagits bort från projekt " + valtProjekt, "Info", JOptionPane.INFORMATION_MESSAGE);

    } catch (InfException ex) {
        System.out.println("Fel vid borttagning av partner: " + ex.getMessage());
        ex.printStackTrace();
        JOptionPane.showMessageDialog(this, "Fel vid borttagning av partner!", "Fel", JOptionPane.ERROR_MESSAGE);
    }
        
    }//GEN-LAST:event_btnTaBortPartnerActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TaBortPartnersProjektledare.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TaBortPartnersProjektledare.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TaBortPartnersProjektledare.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TaBortPartnersProjektledare.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
            //    new TaBortPartnersProjektledare().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnTaBortPartner;
    private javax.swing.JComboBox<String> jcbProjektTaBortProjektledare;
    private javax.swing.JList<String> jlistPartners;
    private javax.swing.JScrollPane jscrPartners;
    private javax.swing.JLabel lblInloggadAnvandare;
    // End of variables declaration//GEN-END:variables
}
